{"ast":null,"code":"import axios from'axios';const clientId='7c6b8a3ea0e3406b9d8e5974be8b442b';const clientSecret='49aa02d0a85249279ae8ab73bbef28f5';const lastFmApiKey='28c425ac5fe3a7288e17efe8d7f9f82c';let spotifyToken=null;let tokenExpiry=null;const getSpotifyToken=async()=>{if(spotifyToken&&tokenExpiry&&tokenExpiry>Date.now()){return spotifyToken;}const response=await axios.post('https://accounts.spotify.com/api/token',null,{headers:{'Content-Type':'application/x-www-form-urlencoded','Authorization':\"Basic \".concat(btoa(\"\".concat(clientId,\":\").concat(clientSecret)))},params:{grant_type:'client_credentials'}});spotifyToken=response.data.access_token;tokenExpiry=Date.now()+response.data.expires_in*1000;return spotifyToken;};const getSpotifyTrackDetails=async(trackName,artistName)=>{const token=await getSpotifyToken();const response=await axios.get('https://api.spotify.com/v1/search',{headers:{'Authorization':\"Bearer \".concat(token)},params:{q:\"track:\".concat(trackName,\" artist:\").concat(artistName),type:'track',limit:1}});if(response.data.tracks.items.length>0){return response.data.tracks.items[0];}return null;};const getSpotifyTrackImages=async(trackName,artistName)=>{var _track$album,_track$album$images$;const track=await getSpotifyTrackDetails(trackName,artistName);return(track===null||track===void 0?void 0:(_track$album=track.album)===null||_track$album===void 0?void 0:(_track$album$images$=_track$album.images[1])===null||_track$album$images$===void 0?void 0:_track$album$images$.url)||'';};const getSpotifyArtistDetails=async artistName=>{const token=await getSpotifyToken();const response=await axios.get('https://api.spotify.com/v1/search',{headers:{'Authorization':\"Bearer \".concat(token)},params:{q:\"artist:\".concat(artistName),type:'artist',limit:1}});if(response.data.artists.items.length>0){return response.data.artists.items[0];}return null;};const getLastFmTopTracks=async()=>{try{const response=await axios.get('https://ws.audioscrobbler.com/2.0/',{params:{method:'chart.gettoptracks',api_key:lastFmApiKey,format:'json',limit:50}});return Promise.all(response.data.tracks.track.map(async track=>{const image=await getSpotifyTrackImages(track.name,track.artist.name);const spotifyDetails=await getSpotifyTrackDetails(track.name,track.artist.name);return{id:track.mbid||track.name,// Use name as fallback if mbid is not available\nname:track.name,artist:track.artist.name,image,playcount:track.playcount,spotifyDetails};}));}catch(error){console.error('Failed to fetch Last.FM top tracks',error);return[];}};const getLastFmTopArtists=async function(){let limit=arguments.length>0&&arguments[0]!==undefined?arguments[0]:50;try{const response=await axios.get('https://ws.audioscrobbler.com/2.0/',{params:{method:'chart.gettopartists',api_key:lastFmApiKey,format:'json',limit}});return Promise.all(response.data.artists.artist.map(async artist=>{const spotifyDetails=await getSpotifyArtistDetails(artist.name);return{id:artist.mbid,name:artist.name,genres:(spotifyDetails===null||spotifyDetails===void 0?void 0:spotifyDetails.genres)||[],followers:(spotifyDetails===null||spotifyDetails===void 0?void 0:spotifyDetails.followers.total)||artist.listeners,popularity:(spotifyDetails===null||spotifyDetails===void 0?void 0:spotifyDetails.popularity)||artist.playcount,images:(spotifyDetails===null||spotifyDetails===void 0?void 0:spotifyDetails.images)||[{url:artist.image[2]['#text']}]// Using the medium-sized image\n};}));}catch(error){console.error('Failed to fetch Last.FM top artists',error);return[];}};const getLastFmTrackDetails=async trackId=>{try{const response=await axios.get('https://ws.audioscrobbler.com/2.0/',{params:{method:'track.getInfo',api_key:lastFmApiKey,mbid:trackId,format:'json'}});return response.data.track;}catch(error){console.error('Failed to fetch Last.FM track details',error);return null;}};const getLastFmTrackTags=async(artist,track)=>{try{const response=await axios.get('https://ws.audioscrobbler.com/2.0/',{params:{method:'track.getTopTags',api_key:lastFmApiKey,artist:artist,track:track,format:'json'}});return response.data.toptags.tag.map(tag=>tag.name);}catch(error){console.error('Failed to fetch Last.FM track tags',error);return[];}};const getLastFmArtistDetails=async artist=>{try{const response=await axios.get('https://ws.audioscrobbler.com/2.0/',{params:{method:'artist.getInfo',api_key:lastFmApiKey,artist:artist,format:'json'}});const artistData=response.data.artist;return{...artistData,images:artistData.image.map(img=>({url:img['#text']}))};}catch(error){console.error('Failed to fetch Last.FM artist details',error);return null;}};export{getLastFmTopTracks,getLastFmTopArtists,getLastFmTrackDetails,getLastFmArtistDetails,getLastFmTrackTags,getSpotifyTrackDetails,getSpotifyArtistDetails};","map":{"version":3,"names":["axios","clientId","clientSecret","lastFmApiKey","spotifyToken","tokenExpiry","getSpotifyToken","Date","now","response","post","headers","concat","btoa","params","grant_type","data","access_token","expires_in","getSpotifyTrackDetails","trackName","artistName","token","get","q","type","limit","tracks","items","length","getSpotifyTrackImages","_track$album","_track$album$images$","track","album","images","url","getSpotifyArtistDetails","artists","getLastFmTopTracks","method","api_key","format","Promise","all","map","image","name","artist","spotifyDetails","id","mbid","playcount","error","console","getLastFmTopArtists","arguments","undefined","genres","followers","total","listeners","popularity","getLastFmTrackDetails","trackId","getLastFmTrackTags","toptags","tag","getLastFmArtistDetails","artistData","img"],"sources":["/Users/peter/Documents/SUMMER 2024/SEG3125/tunescout/src/components/API.js"],"sourcesContent":["import axios from 'axios';\n\nconst clientId = '7c6b8a3ea0e3406b9d8e5974be8b442b';\nconst clientSecret = '49aa02d0a85249279ae8ab73bbef28f5';\nconst lastFmApiKey = '28c425ac5fe3a7288e17efe8d7f9f82c';\n\nlet spotifyToken = null;\nlet tokenExpiry = null;\n\nconst getSpotifyToken = async () => {\n  if (spotifyToken && tokenExpiry && tokenExpiry > Date.now()) {\n    return spotifyToken;\n  }\n\n  const response = await axios.post('https://accounts.spotify.com/api/token', null, {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Authorization': `Basic ${btoa(`${clientId}:${clientSecret}`)}`\n    },\n    params: {\n      grant_type: 'client_credentials'\n    }\n  });\n\n  spotifyToken = response.data.access_token;\n  tokenExpiry = Date.now() + response.data.expires_in * 1000;\n  return spotifyToken;\n};\n\nconst getSpotifyTrackDetails = async (trackName, artistName) => {\n  const token = await getSpotifyToken();\n  const response = await axios.get('https://api.spotify.com/v1/search', {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    },\n    params: {\n      q: `track:${trackName} artist:${artistName}`,\n      type: 'track',\n      limit: 1\n    }\n  });\n\n  if (response.data.tracks.items.length > 0) {\n    return response.data.tracks.items[0];\n  }\n\n  return null;\n};\n\nconst getSpotifyTrackImages = async (trackName, artistName) => {\n  const track = await getSpotifyTrackDetails(trackName, artistName);\n  return track?.album?.images[1]?.url || '';\n};\n\nconst getSpotifyArtistDetails = async (artistName) => {\n  const token = await getSpotifyToken();\n  const response = await axios.get('https://api.spotify.com/v1/search', {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    },\n    params: {\n      q: `artist:${artistName}`,\n      type: 'artist',\n      limit: 1\n    }\n  });\n\n  if (response.data.artists.items.length > 0) {\n    return response.data.artists.items[0];\n  }\n\n  return null;\n};\n\nconst getLastFmTopTracks = async () => {\n  try {\n    const response = await axios.get('https://ws.audioscrobbler.com/2.0/', {\n      params: {\n        method: 'chart.gettoptracks',\n        api_key: lastFmApiKey,\n        format: 'json',\n        limit: 50\n      }\n    });\n    return Promise.all(response.data.tracks.track.map(async (track) => {\n      const image = await getSpotifyTrackImages(track.name, track.artist.name);\n      const spotifyDetails = await getSpotifyTrackDetails(track.name, track.artist.name);\n      return {\n        id: track.mbid || track.name, // Use name as fallback if mbid is not available\n        name: track.name,\n        artist: track.artist.name,\n        image,\n        playcount: track.playcount,\n        spotifyDetails\n      };\n    }));\n  } catch (error) {\n    console.error('Failed to fetch Last.FM top tracks', error);\n    return [];\n  }\n};\n\nconst getLastFmTopArtists = async (limit = 50) => {\n  try {\n    const response = await axios.get('https://ws.audioscrobbler.com/2.0/', {\n      params: {\n        method: 'chart.gettopartists',\n        api_key: lastFmApiKey,\n        format: 'json',\n        limit\n      }\n    });\n    return Promise.all(response.data.artists.artist.map(async (artist) => {\n      const spotifyDetails = await getSpotifyArtistDetails(artist.name);\n      return {\n        id: artist.mbid,\n        name: artist.name,\n        genres: spotifyDetails?.genres || [],\n        followers: spotifyDetails?.followers.total || artist.listeners,\n        popularity: spotifyDetails?.popularity || artist.playcount,\n        images: spotifyDetails?.images || [{ url: artist.image[2]['#text'] }] // Using the medium-sized image\n      };\n    }));\n  } catch (error) {\n    console.error('Failed to fetch Last.FM top artists', error);\n    return [];\n  }\n};\n\nconst getLastFmTrackDetails = async (trackId) => {\n  try {\n    const response = await axios.get('https://ws.audioscrobbler.com/2.0/', {\n      params: {\n        method: 'track.getInfo',\n        api_key: lastFmApiKey,\n        mbid: trackId,\n        format: 'json'\n      }\n    });\n    return response.data.track;\n  } catch (error) {\n    console.error('Failed to fetch Last.FM track details', error);\n    return null;\n  }\n};\n\nconst getLastFmTrackTags = async (artist, track) => {\n  try {\n    const response = await axios.get('https://ws.audioscrobbler.com/2.0/', {\n      params: {\n        method: 'track.getTopTags',\n        api_key: lastFmApiKey,\n        artist: artist,\n        track: track,\n        format: 'json'\n      }\n    });\n    return response.data.toptags.tag.map(tag => tag.name);\n  } catch (error) {\n    console.error('Failed to fetch Last.FM track tags', error);\n    return [];\n  }\n};\n\nconst getLastFmArtistDetails = async (artist) => {\n  try {\n    const response = await axios.get('https://ws.audioscrobbler.com/2.0/', {\n      params: {\n        method: 'artist.getInfo',\n        api_key: lastFmApiKey,\n        artist: artist,\n        format: 'json'\n      }\n    });\n    const artistData = response.data.artist;\n    return {\n      ...artistData,\n      images: artistData.image.map(img => ({ url: img['#text'] }))\n    };\n  } catch (error) {\n    console.error('Failed to fetch Last.FM artist details', error);\n    return null;\n  }\n};\n\nexport { getLastFmTopTracks, getLastFmTopArtists, getLastFmTrackDetails, getLastFmArtistDetails, getLastFmTrackTags, getSpotifyTrackDetails, getSpotifyArtistDetails };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}