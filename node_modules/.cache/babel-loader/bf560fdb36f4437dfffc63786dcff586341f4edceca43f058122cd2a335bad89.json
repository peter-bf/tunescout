{"ast":null,"code":"var _jsxFileName = \"/Users/peter/Documents/SUMMER 2024/SEG3125/tunescout/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [topSongs, setTopSongs] = useState([]);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchTopSongs = async () => {\n      try {\n        const response = await axios.get('http://ws.audioscrobbler.com/2.0/', {\n          params: {\n            method: 'chart.gettoptracks',\n            api_key: '28c425ac5fe3a7288e17efe8d7f9f82c',\n            // Replace with your Last.fm API key\n            format: 'json',\n            limit: 100\n          }\n        });\n        setTopSongs(response.data.tracks.track);\n        setError('');\n      } catch (err) {\n        setError('Failed to fetch top songs');\n      }\n    };\n    fetchTopSongs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Top 100 Songs by Streams\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: topSongs.map((song, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [index + 1, \". \", song.name, \" by \", song.artist.name, \" - \", song.playcount, \" streams\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TiFk8y7icFsQnGTCmY3YddOZZEE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","topSongs","setTopSongs","error","setError","fetchTopSongs","response","get","params","method","api_key","format","limit","data","tracks","track","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","song","index","name","artist","playcount","_c","$RefreshReg$"],"sources":["/Users/peter/Documents/SUMMER 2024/SEG3125/tunescout/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [topSongs, setTopSongs] = useState([]);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetchTopSongs = async () => {\n      try {\n        const response = await axios.get('http://ws.audioscrobbler.com/2.0/', {\n          params: {\n            method: 'chart.gettoptracks',\n            api_key: '28c425ac5fe3a7288e17efe8d7f9f82c', // Replace with your Last.fm API key\n            format: 'json',\n            limit: 100\n          }\n        });\n        setTopSongs(response.data.tracks.track);\n        setError('');\n      } catch (err) {\n        setError('Failed to fetch top songs');\n      }\n    };\n\n    fetchTopSongs();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Top 100 Songs by Streams</h1>\n      {error && <p>{error}</p>}\n      <ul>\n        {topSongs.map((song, index) => (\n          <li key={index}>\n            {index + 1}. {song.name} by {song.artist.name} - {song.playcount} streams\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,mCAAmC,EAAE;UACpEC,MAAM,EAAE;YACNC,MAAM,EAAE,oBAAoB;YAC5BC,OAAO,EAAE,kCAAkC;YAAE;YAC7CC,MAAM,EAAE,MAAM;YACdC,KAAK,EAAE;UACT;QACF,CAAC,CAAC;QACFV,WAAW,CAACI,QAAQ,CAACO,IAAI,CAACC,MAAM,CAACC,KAAK,CAAC;QACvCX,QAAQ,CAAC,EAAE,CAAC;MACd,CAAC,CAAC,OAAOY,GAAG,EAAE;QACZZ,QAAQ,CAAC,2BAA2B,CAAC;MACvC;IACF,CAAC;IAEDC,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAKmB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBpB,OAAA;MAAAoB,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChCnB,KAAK,iBAAIL,OAAA;MAAAoB,QAAA,EAAIf;IAAK;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBxB,OAAA;MAAAoB,QAAA,EACGjB,QAAQ,CAACsB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACxB3B,OAAA;QAAAoB,QAAA,GACGO,KAAK,GAAG,CAAC,EAAC,IAAE,EAACD,IAAI,CAACE,IAAI,EAAC,MAAI,EAACF,IAAI,CAACG,MAAM,CAACD,IAAI,EAAC,KAAG,EAACF,IAAI,CAACI,SAAS,EAAC,UACnE;MAAA,GAFSH,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACtB,EAAA,CAtCQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}