{"ast":null,"code":"var _jsxFileName = \"/Users/peter/Documents/SUMMER 2024/SEG3125/tunescout/src/components/Artists.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { useQuery } from 'react-query';\nimport { getLastFmTopArtists } from './API';\nimport ArtistCard from './ArtistCard';\nimport ArtistModal from './ArtistModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Artists = () => {\n  _s();\n  const [selectedArtist, setSelectedArtist] = useState(null);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const modalRef = useRef(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const artistsPerPage = 10;\n  const {\n    data: artists,\n    error,\n    isLoading\n  } = useQuery('topArtists', getLastFmTopArtists);\n\n  // Reset current page to 1 when data is loaded\n  useEffect(() => {\n    if (artists) {\n      setCurrentPage(1);\n    }\n  }, [artists]);\n  const handleArtistClick = useCallback(artist => {\n    setSelectedArtist(artist);\n    setIsModalVisible(true);\n  }, []);\n  const closePopup = useCallback(() => {\n    setIsModalVisible(false);\n    setTimeout(() => {\n      setSelectedArtist(null);\n    }, 300);\n  }, []);\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (modalRef.current && !modalRef.current.contains(event.target)) {\n        closePopup();\n      }\n    };\n    if (isModalVisible) {\n      document.addEventListener('mousedown', handleClickOutside);\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isModalVisible, closePopup]);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"text-red-500 text-center mt-4\",\n    children: \"Failed to fetch top artists\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 21\n  }, this);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"text-center mt-4\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 25\n  }, this);\n  const sortedArtists = [...artists].sort((a, b) => b.popularity - a.popularity);\n  const totalPages = Math.ceil(sortedArtists.length / artistsPerPage);\n  const indexOfLastArtist = currentPage * artistsPerPage;\n  const indexOfFirstArtist = indexOfLastArtist - artistsPerPage;\n  const currentArtists = sortedArtists.slice(indexOfFirstArtist, indexOfLastArtist);\n  const paginate = pageNumber => {\n    setCurrentPage(Math.max(1, Math.min(pageNumber, totalPages)));\n  };\n  const renderPaginationButtons = () => {\n    const pageNumbers = [];\n    const maxVisibleButtons = 5;\n    let startPage = Math.max(1, currentPage - Math.floor(maxVisibleButtons / 2));\n    let endPage = Math.min(totalPages, startPage + maxVisibleButtons - 1);\n    if (endPage - startPage + 1 < maxVisibleButtons) {\n      startPage = Math.max(1, endPage - maxVisibleButtons + 1);\n    }\n    for (let i = startPage; i <= endPage; i++) {\n      pageNumbers.push( /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => paginate(i),\n        className: `px-4 py-2 mx-1 rounded ${i === currentPage ? 'bg-red-600 text-white' : 'bg-white text-red-600'}`,\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this));\n    }\n    return pageNumbers;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-5xl font-bold text-center mb-5 text-red-600 py-3\",\n      children: \"Top Artists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-5 gap-6\",\n        children: currentArtists.map((artist, index) => /*#__PURE__*/_jsxDEV(ArtistCard, {\n          artist: artist,\n          index: index + indexOfFirstArtist,\n          onClick: handleArtistClick\n        }, artist.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center mt-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => paginate(currentPage - 1),\n        disabled: currentPage === 1,\n        className: \"px-4 py-2 mx-1 rounded bg-white text-red-600 disabled:opacity-50\",\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), renderPaginationButtons(), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => paginate(currentPage + 1),\n        disabled: currentPage === totalPages,\n        className: \"px-4 py-2 mx-1 rounded bg-white text-red-600 disabled:opacity-50\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), selectedArtist && /*#__PURE__*/_jsxDEV(ArtistModal, {\n      artist: selectedArtist,\n      isVisible: isModalVisible,\n      onClose: closePopup,\n      modalRef: modalRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(Artists, \"Lo5mvUYT1N+ZGedGLswLB2c5tmY=\", false, function () {\n  return [useQuery];\n});\n_c = Artists;\nexport default Artists;\nvar _c;\n$RefreshReg$(_c, \"Artists\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","useQuery","getLastFmTopArtists","ArtistCard","ArtistModal","jsxDEV","_jsxDEV","Artists","_s","selectedArtist","setSelectedArtist","isModalVisible","setIsModalVisible","modalRef","currentPage","setCurrentPage","artistsPerPage","data","artists","error","isLoading","handleArtistClick","artist","closePopup","setTimeout","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","sortedArtists","sort","a","b","popularity","totalPages","Math","ceil","length","indexOfLastArtist","indexOfFirstArtist","currentArtists","slice","paginate","pageNumber","max","min","renderPaginationButtons","pageNumbers","maxVisibleButtons","startPage","floor","endPage","i","push","onClick","map","index","id","disabled","isVisible","onClose","_c","$RefreshReg$"],"sources":["/Users/peter/Documents/SUMMER 2024/SEG3125/tunescout/src/components/Artists.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { useQuery } from 'react-query';\nimport { getLastFmTopArtists } from './API';\nimport ArtistCard from './ArtistCard';\nimport ArtistModal from './ArtistModal';\n\nconst Artists = () => {\n  const [selectedArtist, setSelectedArtist] = useState(null);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const modalRef = useRef(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const artistsPerPage = 10;\n\n  const { data: artists, error, isLoading } = useQuery('topArtists', getLastFmTopArtists);\n\n  // Reset current page to 1 when data is loaded\n  useEffect(() => {\n    if (artists) {\n      setCurrentPage(1);\n    }\n  }, [artists]);\n\n  const handleArtistClick = useCallback((artist) => {\n    setSelectedArtist(artist);\n    setIsModalVisible(true);\n  }, []);\n\n  const closePopup = useCallback(() => {\n    setIsModalVisible(false);\n    setTimeout(() => {\n      setSelectedArtist(null);\n    }, 300);\n  }, []);\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (modalRef.current && !modalRef.current.contains(event.target)) {\n        closePopup();\n      }\n    };\n\n    if (isModalVisible) {\n      document.addEventListener('mousedown', handleClickOutside);\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside);\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isModalVisible, closePopup]);\n\n  if (error) return <p className=\"text-red-500 text-center mt-4\">Failed to fetch top artists</p>;\n  if (isLoading) return <p className=\"text-center mt-4\">Loading...</p>;\n\n  const sortedArtists = [...artists].sort((a, b) => b.popularity - a.popularity);\n  const totalPages = Math.ceil(sortedArtists.length / artistsPerPage);\n  const indexOfLastArtist = currentPage * artistsPerPage;\n  const indexOfFirstArtist = indexOfLastArtist - artistsPerPage;\n  const currentArtists = sortedArtists.slice(indexOfFirstArtist, indexOfLastArtist);\n\n  const paginate = (pageNumber) => {\n    setCurrentPage(Math.max(1, Math.min(pageNumber, totalPages)));\n  };\n\n  const renderPaginationButtons = () => {\n    const pageNumbers = [];\n    const maxVisibleButtons = 5;\n    let startPage = Math.max(1, currentPage - Math.floor(maxVisibleButtons / 2));\n    let endPage = Math.min(totalPages, startPage + maxVisibleButtons - 1);\n\n    if (endPage - startPage + 1 < maxVisibleButtons) {\n      startPage = Math.max(1, endPage - maxVisibleButtons + 1);\n    }\n\n    for (let i = startPage; i <= endPage; i++) {\n      pageNumbers.push(\n        <button\n          key={i}\n          onClick={() => paginate(i)}\n          className={`px-4 py-2 mx-1 rounded ${i === currentPage ? 'bg-red-600 text-white' : 'bg-white text-red-600'}`}\n        >\n          {i}\n        </button>\n      );\n    }\n\n    return pageNumbers;\n  };\n\n  return (\n    <div className=\"p-4 mb-3\">\n      <h1 className=\"text-5xl font-bold text-center mb-5 text-red-600 py-3\">Top Artists</h1>\n      <div className=\"flex justify-center\">\n        <div className=\"grid grid-cols-5 gap-6\">\n          {currentArtists.map((artist, index) => (\n            <ArtistCard\n              key={artist.id}\n              artist={artist}\n              index={index + indexOfFirstArtist}\n              onClick={handleArtistClick}\n            />\n          ))}\n        </div>\n      </div>\n      <div className=\"flex justify-center mt-6\">\n        <button\n          onClick={() => paginate(currentPage - 1)}\n          disabled={currentPage === 1}\n          className=\"px-4 py-2 mx-1 rounded bg-white text-red-600 disabled:opacity-50\"\n        >\n          Previous\n        </button>\n        {renderPaginationButtons()}\n        <button\n          onClick={() => paginate(currentPage + 1)}\n          disabled={currentPage === totalPages}\n          className=\"px-4 py-2 mx-1 rounded bg-white text-red-600 disabled:opacity-50\"\n        >\n          Next\n        </button>\n      </div>\n      {selectedArtist && <ArtistModal artist={selectedArtist} isVisible={isModalVisible} onClose={closePopup} modalRef={modalRef} />}\n    </div>\n  );\n};\n\nexport default Artists;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}