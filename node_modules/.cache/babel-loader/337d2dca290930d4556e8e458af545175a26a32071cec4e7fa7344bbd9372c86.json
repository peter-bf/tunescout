{"ast":null,"code":"import axios from 'axios';\nconst clientId = '7c6b8a3ea0e3406b9d8e5974be8b442b';\nconst clientSecret = '49aa02d0a85249279ae8ab73bbef28f5';\nexport const getSpotifyToken = async () => {\n  const response = await axios.post('https://accounts.spotify.com/api/token', null, {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Authorization': `Basic ${btoa(`${clientId}:${clientSecret}`)}`\n    },\n    params: {\n      grant_type: 'client_credentials'\n    }\n  });\n  return response.data.access_token;\n};\nexport const getSpotifyTopTracks = async () => {\n  const token = await getSpotifyToken();\n  const response = await axios.get('https://api.spotify.com/v1/playlists/37i9dQZEVXbMDoHDwVN2tF/tracks', {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    },\n    params: {\n      market: 'US',\n      limit: 25\n    }\n  });\n  return response.data.items.map(item => {\n    var _item$track$album$ima;\n    return {\n      name: item.track.name,\n      artist: item.track.artists[0].name,\n      image: ((_item$track$album$ima = item.track.album.images[1]) === null || _item$track$album$ima === void 0 ? void 0 : _item$track$album$ima.url) || ''\n    };\n  });\n};\nexport const getLastFmStreams = async (track, artist) => {\n  try {\n    const response = await axios.get('http://ws.audioscrobbler.com/2.0/', {\n      params: {\n        method: 'track.getInfo',\n        api_key: '28c425ac5fe3a7288e17efe8d7f9f82c',\n        artist: artist,\n        track: track,\n        format: 'json'\n      }\n    });\n    if (response.data && response.data.track) {\n      return response.data.track.playcount;\n    }\n  } catch (err) {\n    console.error('Failed to fetch Last.fm streams', err);\n  }\n  return 'N/A';\n};","map":{"version":3,"names":["axios","clientId","clientSecret","getSpotifyToken","response","post","headers","btoa","params","grant_type","data","access_token","getSpotifyTopTracks","token","get","market","limit","items","map","item","_item$track$album$ima","name","track","artist","artists","image","album","images","url","getLastFmStreams","method","api_key","format","playcount","err","console","error"],"sources":["/Users/peter/Documents/SUMMER 2024/SEG3125/tunescout copy 2/src/components/API.js"],"sourcesContent":["import axios from 'axios';\n\nconst clientId = '7c6b8a3ea0e3406b9d8e5974be8b442b';\nconst clientSecret = '49aa02d0a85249279ae8ab73bbef28f5';\n\nexport const getSpotifyToken = async () => {\n  const response = await axios.post('https://accounts.spotify.com/api/token', null, {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Authorization': `Basic ${btoa(`${clientId}:${clientSecret}`)}`\n    },\n    params: {\n      grant_type: 'client_credentials'\n    }\n  });\n\n  return response.data.access_token;\n};\n\nexport const getSpotifyTopTracks = async () => {\n  const token = await getSpotifyToken();\n  const response = await axios.get('https://api.spotify.com/v1/playlists/37i9dQZEVXbMDoHDwVN2tF/tracks', {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    },\n    params: {\n      market: 'US',\n      limit: 25\n    }\n  });\n\n  return response.data.items.map(item => ({\n    name: item.track.name,\n    artist: item.track.artists[0].name,\n    image: item.track.album.images[1]?.url || '',\n  }));\n};\n\nexport const getLastFmStreams = async (track, artist) => {\n  try {\n    const response = await axios.get('http://ws.audioscrobbler.com/2.0/', {\n      params: {\n        method: 'track.getInfo',\n        api_key: '28c425ac5fe3a7288e17efe8d7f9f82c',\n        artist: artist,\n        track: track,\n        format: 'json'\n      }\n    });\n    if (response.data && response.data.track) {\n      return response.data.track.playcount;\n    }\n  } catch (err) {\n    console.error('Failed to fetch Last.fm streams', err);\n  }\n  return 'N/A';\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,kCAAkC;AACnD,MAAMC,YAAY,GAAG,kCAAkC;AAEvD,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;EACzC,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,wCAAwC,EAAE,IAAI,EAAE;IAChFC,OAAO,EAAE;MACP,cAAc,EAAE,mCAAmC;MACnD,eAAe,EAAE,SAASC,IAAI,CAAC,GAAGN,QAAQ,IAAIC,YAAY,EAAE,CAAC;IAC/D,CAAC;IACDM,MAAM,EAAE;MACNC,UAAU,EAAE;IACd;EACF,CAAC,CAAC;EAEF,OAAOL,QAAQ,CAACM,IAAI,CAACC,YAAY;AACnC,CAAC;AAED,OAAO,MAAMC,mBAAmB,GAAG,MAAAA,CAAA,KAAY;EAC7C,MAAMC,KAAK,GAAG,MAAMV,eAAe,CAAC,CAAC;EACrC,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACc,GAAG,CAAC,oEAAoE,EAAE;IACrGR,OAAO,EAAE;MACP,eAAe,EAAE,UAAUO,KAAK;IAClC,CAAC;IACDL,MAAM,EAAE;MACNO,MAAM,EAAE,IAAI;MACZC,KAAK,EAAE;IACT;EACF,CAAC,CAAC;EAEF,OAAOZ,QAAQ,CAACM,IAAI,CAACO,KAAK,CAACC,GAAG,CAACC,IAAI;IAAA,IAAAC,qBAAA;IAAA,OAAK;MACtCC,IAAI,EAAEF,IAAI,CAACG,KAAK,CAACD,IAAI;MACrBE,MAAM,EAAEJ,IAAI,CAACG,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC,CAACH,IAAI;MAClCI,KAAK,EAAE,EAAAL,qBAAA,GAAAD,IAAI,CAACG,KAAK,CAACI,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,cAAAP,qBAAA,uBAA1BA,qBAAA,CAA4BQ,GAAG,KAAI;IAC5C,CAAC;EAAA,CAAC,CAAC;AACL,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAG,MAAAA,CAAOP,KAAK,EAAEC,MAAM,KAAK;EACvD,IAAI;IACF,MAAMnB,QAAQ,GAAG,MAAMJ,KAAK,CAACc,GAAG,CAAC,mCAAmC,EAAE;MACpEN,MAAM,EAAE;QACNsB,MAAM,EAAE,eAAe;QACvBC,OAAO,EAAE,kCAAkC;QAC3CR,MAAM,EAAEA,MAAM;QACdD,KAAK,EAAEA,KAAK;QACZU,MAAM,EAAE;MACV;IACF,CAAC,CAAC;IACF,IAAI5B,QAAQ,CAACM,IAAI,IAAIN,QAAQ,CAACM,IAAI,CAACY,KAAK,EAAE;MACxC,OAAOlB,QAAQ,CAACM,IAAI,CAACY,KAAK,CAACW,SAAS;IACtC;EACF,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,iCAAiC,EAAEF,GAAG,CAAC;EACvD;EACA,OAAO,KAAK;AACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}